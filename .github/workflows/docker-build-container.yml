name: Docker Build Container

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Run only on release branch and tags

on: [push]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  COMPONENT_NAME: web
  DOCKERFILE_LOCATION: ./Dockerfile
  ACCOUNT_NAME: ${{ github.event.repository.owner.login }}
  REPO_NAME:  ${{ github.event.repository.name }}
  VERSION_TAG: ${{ github.run_number }}
  FULL_REPO_PREFIX: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'


      - id: repo_path
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{env.REGISTRY}}/${{ github.repository }}

      - id: publish_tags
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{steps.repo_path.outputs.lowercase}}/${{env.COMPONENT_NAME}}:latest
        

      - name: Print Information
        run: |
          echo "Image Name: ${{steps.repo_path.outputs.lowercase}}"
          echo "Version: v${{ github.run_number }}"
          echo "Dockerfile located ${{env.DOCKERFILE_LOCATION}}"
          echo "TAG ${{steps.publish_tags.outputs.lowercase}}"

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
    

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64 
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{steps.publish_tags.outputs.lowercase}}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{env.DOCKERFILE_LOCATION}}


      # Create a release generate version from tag and push to github also upload build artifacts
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
        
        

            

